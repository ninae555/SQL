use ap;
DROP PROCEDURE IF EXISTS insert_glaccount;
DELIMITER //

create procedure insert_glaccount
(
	account_number_param       int,
    account_description_param  varchar(50)
)
begin
 
 start transaction;
 
 insert into general_ledger_accounts 
	(account_number, account_description)
    VALUES
    (account_number_param, account_description_param);
    
    end //
    
delimiter ;
    
 call insert_glaccount(700, 'txt');
 call insert_glaccount(700, 'Cash'); -- description and id must be unique
 delete from general_ledger_accounts where account_number = 1123;
 delete from general_ledger_accounts where account_number = 700;
 -- Question 2
 
 
 select * 
 from general_ledger_accounts
 order by account_number;
 
delimiter //
 
 create function test_glaccount_description 
 ( 
 account_description_param varchar(50) -- something you pass/variable is something you store
 )
 returns int 
 deterministic reads sql data 
 begin
	declare account_number_var  int; -- how to choose the right variable 
   
    select account_number
    into account_number_var
    from general_ledger_accounts
    where account_descrption = account_description_param;
    
    if account_description_var is not null then 
		return true;
	else
		return false;
	end if;
     
    end//
    
    delimiter ;
    
    -- Test success: 
SELECT test_glaccounts_description('Book Inventory') AS message;

-- Test fail: 
SELECT test_glaccounts_description('Fail') AS message;


    /* Chapter 16 */
    -- error when payment_total + credit_total > invoice_total for each row 
    -- test with update statement


DELIMITER //
CREATE TRIGGER invoices_before_update
 BEFORE UPDATE ON invoices FOR EACH ROW
BEGIN DECLARE sum_payment_credit DECIMAL(9,2);

SELECT sum(payment_total + credit_total) 
INTO sum_payment_credit 
FROM invoices
WHERE invoice_id = NEW.invoice_id;

IF sum_payment_credit > NEW.invoice_total THEN 
SIGNAL SQLSTATE 'HY000'
SET MESSAGE_TEXT = 'Sum of Payment Total and Credit total must not be greater than invoice total.'; 
END IF; 
END//    
delimiter ;
